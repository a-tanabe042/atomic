{"version":3,"file":"static/js/694.187be505.chunk.js","mappings":"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","sources":["features/projects/components/ProjectMembers.js","features/projects/index.js","pages/protected/Projects.js"],"sourcesContent":["import React from \"react\";\n\nconst ProjectMembers = () => {\n  return (\n    <div className=\"avatar-group -space-x-6 rtl:space-x-reverse\">\n      <div className=\"avatar\">\n        <div className=\"w-12\">\n          <img src=\"https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg\" />\n        </div>\n      </div>\n      <div className=\"avatar\">\n        <div className=\"w-12\">\n          <img src=\"https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg\" />\n        </div>\n      </div>\n      <div className=\"avatar\">\n        <div className=\"w-12\">\n          <img src=\"https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg\" />\n        </div>\n      </div>\n      <div className=\"avatar\">\n        <div className=\"w-12\">\n          <img src=\"https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg\" />\n        </div>\n      </div>\n      <div className=\"avatar placeholder\">\n        <div className=\"w-12 bg-neutral text-neutral-content\">\n          <span>+3</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectMembers;\n","import { useState, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { tabState } from \"../../state\";\nimport { useDispatch } from \"react-redux\";\nimport TitleCard from \"../../components/Cards/TitleCard\";\nimport { showNotification } from \"../common/headerSlice\";\nimport ProjectMembers from \"./components/ProjectMembers\";\nimport ProjectContext from \"./components/ProjectContext\";\nimport CreateProjectModal from \"./components/CreateProjectModal\";\nimport TabsLayout from \"../../components/tab/TabsLayout\";\n\nfunction Projects() {\n  const dispatch = useDispatch();\n  const [activeTab, setActiveTab] = useRecoilState(tabState);\n  const [integrationList, setIntegrationList] = useState(MY_PROJECTS_LIST);\n  const [createProjectModal, setCreateProjectModal] = useState(false);\n\n  useEffect(() => {\n    // activeTabが変更されたときにプロジェクトリストを更新\n    if (!activeTab || !['myProjects', 'allProjects'].includes(activeTab)) {\n      setActiveTab('myProjects');\n    }\n    const updatedList = (\n      activeTab === \"myProjects\" ? MY_PROJECTS_LIST : ALL_PROJECTS_LIST\n    ).map((item) => ({ ...item, isActive: false }));\n\n    setIntegrationList(updatedList);\n  }, [activeTab]);\n  \n\n  // Function to update the active status of a project\n  const updateIntegrationStatus = (index) => {\n    const newList = integrationList.map((item, idx) => {\n      return idx === index ? { ...item, isActive: !item.isActive } : item;\n    });\n    // Dispatch a notification when the tab changes\n    dispatch(\n      showNotification({\n        message: `Switched to ${\n          activeTab === \"myProjects\" ? \"My Projects\" : \"All Projects\"\n        }`,\n        status: 1,\n      })\n    );\n\n    setIntegrationList(newList);\n  };\n\n  // Find the currently active project\n  const activeProject = integrationList.find((item) => item.isActive);\n\n  // Function to switch between tabs\n  const switchTab = (tabName) => {\n    setActiveTab(tabName);\n  };\n\n  // Function to open the create project modal\n  const handleCreateProjectClick = () => {\n    setCreateProjectModal(true);\n  };\n\n  // Function to close the create project modal\n  const handleCloseModal = () => {\n    setCreateProjectModal(false);\n  };\n\n  return (\n    <>\n    <TabsLayout onTabChange={switchTab} tabs={[\"myProjects\", \"allProjects\"]} />\n\n\n      {/* Grid for displaying projects */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-2\">\n        {integrationList.map((project, i) =>\n          // Render TitleCard for each active project\n          project.isActive || !integrationList.some((item) => item.isActive) ? (\n            <TitleCard key={i} title={project.name} topMargin={\"mt-2\"}>\n              <span className=\"badge badge-outline\">{project.badge}</span>\n              <p className=\"flex mt-2\">{project.description}</p>\n\n              {/* Toggle for project active status */}\n              <div className=\"flex mt-12 justify-between\">\n                <ProjectMembers />\n                <div className=\"mt-6 text-right\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle toggle-success toggle-lg\"\n                    checked={project.isActive}\n                    onChange={() => updateIntegrationStatus(i)}\n                  />\n                </div>\n              </div>\n            </TitleCard>\n          ) : null\n        )}\n      </div>\n\n      {/* Display additional context for the active project */}\n      {activeProject && (\n        <div className=\"mt-4\">\n          <ProjectContext project={activeProject} />\n        </div>\n      )}\n\n      {/* Button to create a new project, shown only on My Projects tab */}\n      {activeTab === \"myProjects\" && (\n        <button\n          className=\"btn btn-error text-white fixed right-5 bottom-5 rounded-full\"\n          onClick={handleCreateProjectClick}\n        >\n          Create Project\n        </button>\n      )}\n\n      {createProjectModal && (\n        <CreateProjectModal\n          isOpen={createProjectModal}\n          onClose={handleCloseModal}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Projects;\n\n// Dummy data for My Projects\nconst MY_PROJECTS_LIST = [\n  {\n    name: \"社内研修アプリの作成\",\n    badge: \"個人開発\",\n    isActive: false,\n    description:\n      \"Slack is an instant messaging program designed by Slack Technologies and owned by Salesforce.\",\n  },\n  {\n    name: \"社内管理アプリの作成\",\n    badge: \"社内開発\",\n    isActive: false,\n    description:\n      \"Meta Platforms, Inc., doing business as Meta and formerly named Facebook, Inc., and TheFacebook.\",\n  },\n  {\n    name: \"SALTO盛り上げよう会\",\n    badge: \"社内開発\",\n    isActive: false,\n    description:\n      \"Meta Platforms, Inc., doing business as Meta and formerly named Facebook, Inc., and TheFacebook.\",\n  },\n];\n\n// Dummy data for All Projects\nconst ALL_PROJECTS_LIST = [\n  {\n    name: \"社内研修アプリの作成\",\n    badge: \"個人開発\",\n    isActive: false,\n    description:\n      \"Slack is an instant messaging program designed by Slack Technologies and owned by Salesforce.\",\n  },\n  {\n    name: \"社内管理アプリの作成\",\n    badge: \"社内開発\",\n    isActive: false,\n    description:\n      \"Meta Platforms, Inc., doing business as Meta and formerly named Facebook, Inc., and TheFacebook.\",\n  },\n  {\n    name: \"SALTO盛り上げよう会\",\n    badge: \"社内開発\",\n    isActive: false,\n    description:\n      \"Meta Platforms, Inc., doing business as Meta and formerly named Facebook, Inc., and TheFacebook.\",\n  },\n  {\n    name: \"コーポレートサイトの作成\",\n    badge: \"個人開発\",\n    isActive: false,\n    description:\n      \"Meta Platforms, Inc., doing business as Meta and formerly named Facebook, Inc., and TheFacebook.\",\n  },\n  {\n    name: \"【新卒研修】SQL問題集\",\n    badge: \"社内研修\",\n    isActive: false,\n    description:\n      \"Meta Platforms, Inc., doing business as Meta and formerly named Facebook, Inc., and TheFacebook.\",\n  },\n];\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Projects from '../../features/projects'\n\nfunction InternalPage(){\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Projects\"}))\n      }, [])\n      \n    return(\n        <Projects />\n    )\n}\n\nexport default InternalPage"],"names":["ProjectMembers","_jsxs","className","children","_jsx","src","dispatch","useDispatch","activeTab","setActiveTab","useRecoilState","tabState","integrationList","setIntegrationList","useState","MY_PROJECTS_LIST","createProjectModal","setCreateProjectModal","useEffect","includes","updatedList","ALL_PROJECTS_LIST","map","item","isActive","activeProject","find","_Fragment","TabsLayout","onTabChange","tabName","tabs","project","i","some","TitleCard","title","name","topMargin","badge","description","type","checked","onChange","index","newList","idx","showNotification","message","concat","status","updateIntegrationStatus","ProjectContext","onClick","handleCreateProjectClick","CreateProjectModal","isOpen","onClose","handleCloseModal","setPageTitle","Projects"],"sourceRoot":""}