{"version":3,"file":"static/js/599.13fcfa7c.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","components/Input/SearchBar.js","components/filter/Filter.js","features/user/LoadingModal.js","features/teams/components/ProjectMemberList.js","features/teams/components/AddNewMember.js","features/teams/components/TrainingStatus.js","features/teams/components/ProjectStatus.js","hooks/useCookie.js","features/teams/index.js","pages/protected/Teams.js"],"sourcesContent":["import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(FunnelIcon);\nexport default ForwardRef;","\n\nimport React, { useEffect } from 'react'\n\nfunction SearchBar({searchText, styleClass, placeholderText, setSearchText}) {\n\n\n\nconst updateSearchInput = (value) => {\n    setSearchText(value)\n}\n\n  return (\n    <div className={\"inline-block \" + styleClass}>\n    <div className=\"input-group  relative flex flex-wrap items-stretch w-full \">\n      <input type=\"search\" value={searchText} placeholder={placeholderText || \"Search\"} onChange={(e) => updateSearchInput(e.target.value)} className=\"input input-sm input-bordered  w-full max-w-xs\" />\n  </div>\n</div>\n  )\n}\n\nexport default SearchBar\n","import React, { useState, useEffect } from \"react\";\nimport FunnelIcon from \"@heroicons/react/24/outline/FunnelIcon\";\nimport SearchBar from \"../Input/SearchBar\";\n\nconst Filter = ({ removeFilter, applyFilter, applySearch, posts, departments }) => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const showFiltersAndApply = (param) => {\n    setSearchText(param); // Set the searchText to the selected filter\n    applyFilter(param);\n  };\n\n  useEffect(() => {\n    const handleSearch = () => {\n      if (searchText === \"\") {\n        removeFilter();\n      } else {\n        applySearch(searchText);\n      }\n    };\n\n    handleSearch();\n    // ここで、依存配列に searchText のみを含めます。\n  }, [searchText]); \n  \n\n  return (\n    <div className=\"inline-block float-right\">\n      <SearchBar\n        searchText={searchText}\n        setSearchText={setSearchText}\n        styleClass=\"mr-4\"\n      />\n      <div className=\"dropdown dropdown-bottom dropdown-end\">\n        <label tabIndex={0} className=\"btn btn-sm btn-outline\">\n          <FunnelIcon className=\"w-5 mr-2\" />\n          Filter\n        </label>\n        <ul\n          tabIndex={0}\n          className=\"dropdown-content menu p-2 text-sm shadow bg-base-100 rounded-box w-52\"\n        >\n          <li className=\"menu-title\"><span>Posts</span></li>\n          {posts.map((post, index) => (\n            <li key={index}><a onClick={() => showFiltersAndApply(post)}>{post}</a></li>\n          ))}\n          <li className=\"menu-title\"><span>Departments</span></li>\n          {departments.map((department, index) => (\n            <li key={index}><a onClick={() => showFiltersAndApply(department)}>{department}</a></li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Lottie from 'lottie-react';\nimport LoadingAnimation from '../../assets/lottie/loading.json'; // Lottieアニメーションファイルのパス\n\nconst LoadingModal = () => {\n  return (\n    <div className=\"fixed inset-0 bg-white flex justify-center items-center\">\n      <div className=\"bg-transparent p-5 rounded-lg flex items-center justify-center\">\n        <Lottie animationData={LoadingAnimation}  />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingModal;\n","import React from \"react\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\n\nfunction ProjectMemberList({ members, onRemove }) {\n\n  if (!members || members.length === 0) {\n    return (\n      <TitleCard title=\"Project Members\">\n        <p className=\"text-center\">No members found.</p>\n      </TitleCard>\n    );\n  }\n\n  return (\n    <TitleCard title=\"Project Members\">\n      <div className=\"overflow-auto w-full py-2\">\n        <table className=\"table w-full\">\n          <thead>\n            <tr>\n              <th className=\"text-center\">Name</th>\n              <th className=\"text-center\">Post</th>\n              <th className=\"text-center\">Department</th>\n              <th className=\"text-center\">Project Role</th>\n              <th className=\"text-center\">Remove</th>\n            </tr>\n          </thead>\n          <tbody>\n            {members.map((member, index) => (\n               <tr\n               key={index}\n               className=\"bg-white shadow-lg rounded-lg overflow-hidden mb-4\"\n             >\n                <td className=\"p-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"avatar\">\n                      <div className=\"mask mask-squircle w-12 h-12\">\n                        <img src={member.picture} alt=\"Avatar\" />\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"font-bold\">{member.first_name}</div>\n                      <div className=\"text-gray-500\">{member.last_name}</div>\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"flex flex-wrap gap-1 justify-center items-center\">\n                    <span className=\"badge badge-outline\">\n                      {member.post}\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"flex justify-center\">\n                    {member.division} {member.department} {member.section}{\" \"}\n                    {member.group}\n                  </div>\n                </td>\n                <td className=\"text-center\">\n                  <select className=\"select select-bordered w-full\">\n                    <option>Member</option>\n                    <option>Project Leader(PL)</option>\n                    <option>Project Manager(PM)</option>\n                    <option>Master</option>\n\n                  </select>\n                </td>\n                <td className=\"flex justify-center\">\n                  <div>\n                  <button\n                    onClick={() => onRemove(member.id)}\n                    className=\"btn btn-outline btn-error\"\n                  >\n                    Remove\n                  </button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </TitleCard>\n  );\n}\n\nexport default ProjectMemberList;\n","import React, { useState, useEffect } from \"react\";\nimport useStrapi from \"../../../hooks/useStrapi\";\nimport LoadingModal from \"../../user/LoadingModal\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport Filter from \"../../../components/filter/Filter\";\nimport ProjectMemberList from \"./ProjectMemberList\";\n\n  // Dummy data for 3 members\n  const dummyMembers = [\n    { id: 'dummy1', first_name: '田邉', last_name: '太郎', post: 'member', department: 'システム開発2部 1課 1G', skills: ['React', 'Node.js'], picture: 'https://lh3.googleusercontent.com/a-/ALV-UjVQP_36cj3P1oYq5Cw8OnjkvvEXWXtKA26HfyGZ22Lv=s96-c' },\n    { id: 'dummy2', first_name: '山田', last_name: '太郎', post: 'member', department: 'システム開発2部 1課 3G', skills: ['Photoshop', 'Illustrator'], picture: 'https://lh3.googleusercontent.com/a-/ALV-UjVQP_36cj3P1oYq5Cw8OnjkvvEXWXtKA26HfyGZ22Lv=s96-c' },\n    { id: 'dummy3', first_name: '佐藤', last_name: '花子', post: '主任', department: 'システム開発2部 1課 2G', skills: ['Leadership', 'Communication'], picture: 'https://lh3.googleusercontent.com/a-/ALV-UjVQP_36cj3P1oYq5Cw8OnjkvvEXWXtKA26HfyGZ22Lv=s96-c' },\n    { id: 'dummy4', first_name: '鈴木', last_name: '一郎', post: 'member', department: 'システム開発2部 1課 2G', skills: ['Leadership', 'Communication'], picture: 'https://lh3.googleusercontent.com/a-/ALV-UjVQP_36cj3P1oYq5Cw8OnjkvvEXWXtKA26HfyGZ22Lv=s96-c' }\n\n  ];\n\nconst AddNewMember = () => {\n  const { data: membersData, loading: membersLoading } = useStrapi(\n    \"user-saltos\",\n    {}\n  );\n  const { data: departmentData, loading: departmentLoading } = useStrapi(\n    \"departments\",\n    {}\n  );\n  const { data: sectionData, loading: sectionLoading } = useStrapi(\n    \"sections\",\n    {}\n  );\n  const { data: groupData, loading: groupLoading } = useStrapi(\"groups\", {});\n  const { data: postData, loading: postLoading } = useStrapi(\"posts\", {});\n  const { data: divisionData, loading: divisionLoading } = useStrapi(\n    \"divisions\",\n    {}\n  );\n\n  const isLoading =\n    membersLoading ||\n    postLoading ||\n    departmentLoading ||\n    sectionLoading ||\n    groupLoading ||\n    divisionLoading;\n\n  const [selectedMembers, setSelectedMembers] = useState(dummyMembers);\n  const postsList =\n    postData?.data.map((post) => post.attributes.pos_name) || [];\n  const departmentsList =\n    departmentData?.data.map((department) => department.attributes.dep_name) ||\n    [];\n  const [filteredMembers, setFilteredMembers] = useState([]);\n\n  const [, setFilterParam] = useState(\"\");\n\n  useEffect(() => {\n    setFilteredMembers([]);\n  }, [departmentData, sectionData, groupData, postData, divisionData]);\n\n  const handleAddMember = (member) => {\n    setSelectedMembers((prevMembers) => {\n      if (prevMembers.find((m) => m.id === member.id)) {\n        return prevMembers;\n      }\n      return [...prevMembers, member];\n    });\n  };\n\n  const handleSave = () => {\n    console.log(\"Saving members:\", selectedMembers);\n  };\n\n  const handleRemoveMember = (memberId) => {\n    setSelectedMembers((currentMembers) =>\n      currentMembers.filter((member) => member.id !== memberId)\n    );\n  };\n\n  const applyFilter = (filterParam) => {\n    setFilterParam(filterParam);\n    if (membersData && membersData.data) {\n      let filtered = membersData.data.map(enhanceMemberData);\n      if (filterParam !== \"All\") {\n        filtered = filtered.filter(\n          (member) =>\n            member.post === filterParam || member.department === filterParam\n        );\n      }\n      setFilteredMembers(filtered);\n    }\n  };\n\n  const removeFilter = () => {\n    setFilterParam(\"\");\n    if (membersData && membersData.data) {\n      setFilteredMembers([]);\n    }\n  };\n\n  const applySearch = (searchText) => {\n    const searchWords = searchText\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((word) => word.length > 0);\n\n    if (searchWords.length === 0) {\n      setFilteredMembers(membersData.data.map(enhanceMemberData));\n    } else {\n      const filteredData = membersData.data\n        .map(enhanceMemberData)\n        .filter((member) => {\n          const memberDataString = `\n            ${member.first_name}${member.last_name}\n            ${member.department}${member.section}${member.group}\n            ${member.post}${member.division}${member.skills.join(\"\")}`\n            .toLowerCase()\n            .replace(/\\s+/g, \"\");\n\n          return searchWords.every((word) => memberDataString.includes(word));\n        });\n\n      setFilteredMembers(filteredData);\n    }\n  };\n\n  const enhanceMemberData = (member) => ({\n    id: member.id,\n    ...member.attributes,\n    department:\n      departmentData.data.find((d) => d.id === member.attributes.dep_id)\n        ?.attributes?.dep_name || \"\",\n    section:\n      sectionData.data.find((s) => s.id === member.attributes.section_id)\n        ?.attributes?.section_name || \"\",\n    group:\n      groupData.data.find((g) => g.id === member.attributes.group_id)\n        ?.attributes?.group_name || \"\",\n    post:\n      postData.data.find((p) => p.id === member.attributes.pos_id)?.attributes\n        ?.pos_name || \"\",\n    division:\n      divisionData.data.find((d) => d.id === member.attributes.div_id)\n        ?.attributes?.div_name || \"\",\n    skills: member.attributes.skills || [],\n    goals: member.attributes.goals || [],\n  });\n\n  if (isLoading) {\n    return <LoadingModal />;\n  }\n\n  return (\n    <>\n    \n      <div>\n        <ProjectMemberList\n          members={selectedMembers}\n          onRemove={handleRemoveMember}\n        />\n        <button\n          onClick={handleSave}\n          className=\"btn btn-error text-white fixed right-5 bottom-5 rounded-full\"\n        >\n          Save Members\n        </button>\n      </div>\n      <TitleCard\n        title=\"Add Member\"\n        topMargin=\"mt-4\"\n        TopSideButtons={\n          <Filter\n            applySearch={applySearch}\n            applyFilter={applyFilter}\n            removeFilter={removeFilter}\n            posts={postsList}\n            departments={departmentsList}\n          />\n        }\n      >\n        <div id=\"top-of-page\" className=\"overflow-auto w-full py-2\">\n          <table className=\"table w-full\">\n            <thead>\n              <tr>\n                <th className=\"text-center\">Name</th>\n                <th className=\"text-center\">Post</th>\n                <th className=\"text-center\">Department</th>\n                <th className=\"text-center\">Skills</th>\n                <th className=\"text-center\">Add Members</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredMembers.length > 0 ? (\n                filteredMembers.map((member, index) => (\n                  <tr\n                    key={index}\n                    className=\"bg-white shadow-lg rounded-lg overflow-hidden mb-4\"\n                  >\n                    <td className=\"p-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"avatar\">\n                          <div className=\"mask mask-squircle w-12 h-12\">\n                            <img src={member.picture} alt=\"Avatar\" />\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"font-bold\">{member.first_name}</div>\n                          <div className=\"text-gray-500\">\n                            {member.last_name}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td>\n                      <div className=\"flex flex-wrap gap-1 justify-center items-center\">\n                        <span className=\"badge badge-outline\">\n                          {member.post}\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <div className=\"flex justify-center\">\n                        {member.division} {member.department} {member.section}{\" \"}\n                        {member.group}\n                      </div>\n                    </td>\n                    <td className=\"max-w-[300px] overflow-auto\">\n                      <div className=\"flex flex-wrap gap-1 justify-left items-center\">\n                        {member.skills && member.skills.length > 0 ? (\n                          member.skills.slice(0, 3).map((skill, skillIndex) => (\n                            <span\n                              key={skillIndex}\n                              className=\"badge badge-outline text-xs\"\n                            >\n                              {skill}\n                            </span>\n                          ))\n                        ) : (\n                          <span className=\"text-xs items-center\"></span>\n                        )}\n                      </div>\n                    </td>\n                    <td>\n                      <div className=\"flex justify-center\">\n                        <button\n                          onClick={() => handleAddMember(member)}\n                          className=\"btn btn-outline btn-success\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"5\" className=\"text-center p-4\">\n                    Add New Member\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </TitleCard>\n    </>\n  );\n};\n\nexport default AddNewMember;\n","import React from 'react'\n\nconst TrainingStatus=()=>{\nreturn(\n    <div>\n        TrainingStatus\n    </div>\n)\n\n}\n\nexport default TrainingStatus","import React, { useState } from \"react\";\nimport ProjectContext from \"../../projects/components/ProjectContext\";\nimport ProjectMemberList from \"./ProjectMemberList\";\nimport KanbanBoard from \"./KanbanBoard\";\nimport CreateProjectModal from \"../../projects/components/CreateProjectModal\";\n\nconst ProjectStatus = () => {\n  const [createProjectModal, setCreateProjectModal] = useState(false);\n\n  // Function to open the create project modal\n  const handleCreateProjectClick = () => {\n    setCreateProjectModal(true);\n  };\n\n  // Function to close the create project modal\n  const handleCloseModal = () => {\n    setCreateProjectModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"mt-4\">\n       \n        <ProjectContext />\n      </div>\n      <div className=\"flex justify-end\">\n        <button \n          onClick={handleCreateProjectClick}\n          className=\"btn btn-error text-white fixed right-5 bottom-5 rounded-full z-10\" // Add your styling here\n        >\n          Edit Project\n        </button>\n      </div>\n      <div>\n        <ProjectMemberList />\n      </div>\n     \n      <div>\n        <KanbanBoard />\n      </div>\n\n      {createProjectModal && (\n        <CreateProjectModal\n          isOpen={createProjectModal}\n          onClose={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectStatus;\n","import { useState, useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { cookieState } from \"../state\"; // Recoilの状態をインポートします。\n\n// Reactアプリケーションでクッキーを管理するためのカスタムフック `useCookie` です。\nexport const useCookie = (name, initialValue) => {\n  // クッキーの状態管理のためのRecoilの状態設定関数。\n  const setRecoilCookie = useSetRecoilState(cookieState(name));\n\n  // クッキーの値を保存するためのStateフック。\n  // 初期状態は保存されたクッキーの値か、それがなければ初期値になります。\n  const [value, setValue] = useState(() => {\n    const savedValue = getCookie(name);\n    return savedValue !== null ? savedValue : initialValue;\n  });\n\n  // 値が変更されるたびにクッキーを設定し、Recoilの状態も更新します。\n  useEffect(() => {\n    setCookie(name, value, 7); // 7日間のクッキーを設定します。\n    setRecoilCookie(value);\n  }, [value, name, setRecoilCookie]);\n\n  // 現在のクッキーの値と、その値を設定する関数を返します。\n  return [value, setValue];\n};\n\n// クッキーを設定するための関数。\nconst setCookie = (name, value, days) => {\n  const d = new Date();\n  d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n  const expires = \"expires=\" + d.toUTCString();\n  document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n};\n\n// クッキーを取得するための関数。\nconst getCookie = (name) => {\n  const nameEQ = name + \"=\";\n  const ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") c = c.substring(1);\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n};\n","import React, { useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { tabState, selectedProjectState } from \"../../state\";\nimport TabsLayout from \"../../components/tab/TabsLayout\";\nimport AddNewMember from \"./components/AddNewMember\";\nimport TrainingContext from \"./components/TrainingStatus\"; // 仮のコンポーネント\nimport ProjectStatus from \"./components/ProjectStatus\";\nimport { useCookie } from \"../../hooks/useCookie\"; // useCookie フックをインポート\n\n\nfunction Teams() {\n  const [selectedProjectId, setSelectedProjectId] = useCookie(\"selectedProject\", \"\");\n  const [selectedProject, setSelectedProject] = useRecoilState(selectedProjectState);\n  const [activeTab, setActiveTab] = useRecoilState(tabState);\n  const projects = [\n    { id: 1, name: \"社内研修アプリの作成\" },\n    { id: 2, name: \"社内管理アプリの作成\" },\n    { id: 3, name: \"Salto盛り上げよう会\" },\n  ];\n\n  useEffect(() => {\n    // activeTabとselectedProjectIdの状態を更新\n    if (![\"Add Member\", \"Project\", \"Training\"].includes(activeTab)) {\n      setActiveTab(\"Add Member\");\n    }\n\n    const currentProject = projects.find(p => p.id.toString() === selectedProjectId);\n    if (currentProject && selectedProjectId !== currentProject.id.toString()) {\n      setSelectedProject(currentProject);\n    }\n  }, [activeTab, selectedProjectId, projects]);\n\n  const switchTab = (tabName) => {\n    setActiveTab(tabName);\n  };\n\n  return (\n    <>\n   <label className=\"label\">\n        <span className=\"label-text\">Select Project:</span>\n      </label>\n      <select\n        className=\"select select-bordered mb-4\"\n        value={selectedProjectId}\n        onChange={(e) => setSelectedProjectId(e.target.value)}\n      >\n        {projects.map((project) => (\n          <option key={project.id} value={project.id}>\n            {project.name}\n          </option>\n        ))}\n      </select>\n\n      <TabsLayout\n        onTabChange={switchTab}\n        tabs={[\"Add Member\"]}\n        // tabs={[\"Add Member\", \"Project\", \"Training\"]}\n\n      />\n      {activeTab === \"Add Member\" && <AddNewMember project={selectedProject} />}\n      {activeTab === \"Project\" && <ProjectStatus project={selectedProject} />}\n      {activeTab === \"Training\" && (\n        <TrainingContext project={selectedProject} />\n      )}\n    </>\n  );\n}\n\nexport default Teams;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Teams from '../../features/teams'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Teams\"}))\n      }, [])\n\n\n    return(\n        <Teams />\n    )\n}\n\nexport default InternalPage"],"names":["React","_ref","svgRef","title","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","searchText","styleClass","placeholderText","setSearchText","_jsx","className","children","type","value","placeholder","onChange","e","updateSearchInput","target","removeFilter","applyFilter","applySearch","posts","departments","useState","showFiltersAndApply","param","useEffect","_jsxs","SearchBar","tabIndex","FunnelIcon","map","post","index","onClick","department","LoadingModal","Lottie","animationData","LoadingAnimation","members","onRemove","length","TitleCard","member","src","picture","alt","first_name","last_name","division","section","group","dummyMembers","skills","AddNewMember","data","membersData","loading","membersLoading","useStrapi","departmentData","departmentLoading","sectionData","sectionLoading","groupData","groupLoading","postData","postLoading","divisionData","divisionLoading","isLoading","selectedMembers","setSelectedMembers","postsList","attributes","pos_name","departmentsList","dep_name","filteredMembers","setFilteredMembers","setFilterParam","enhanceMemberData","_departmentData$data$","_departmentData$data$2","_sectionData$data$fin","_sectionData$data$fin2","_groupData$data$find","_groupData$data$find$","_postData$data$find","_postData$data$find$a","_divisionData$data$fi","_divisionData$data$fi2","find","dep_id","s","section_id","section_name","g","group_id","group_name","p","pos_id","div_id","div_name","goals","_Fragment","ProjectMemberList","memberId","currentMembers","filter","handleSave","console","log","topMargin","TopSideButtons","Filter","searchWords","toLowerCase","split","word","filteredData","memberDataString","concat","join","replace","every","includes","filterParam","filtered","slice","skill","skillIndex","prevMembers","m","handleAddMember","colSpan","TrainingStatus","ProjectStatus","createProjectModal","setCreateProjectModal","ProjectContext","handleCreateProjectClick","KanbanBoard","CreateProjectModal","isOpen","onClose","handleCloseModal","setCookie","name","days","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","nameEQ","ca","i","c","charAt","substring","indexOf","selectedProjectId","setSelectedProjectId","useCookie","initialValue","setRecoilCookie","useSetRecoilState","cookieState","setValue","savedValue","selectedProject","setSelectedProject","useRecoilState","selectedProjectState","activeTab","setActiveTab","tabState","projects","currentProject","toString","project","TabsLayout","onTabChange","tabName","tabs","TrainingContext","dispatch","useDispatch","setPageTitle","Teams"],"sourceRoot":""}