{"version":3,"file":"static/js/709.c4be6ac6.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/user/LoadingModal.js","features/settings/team/index.js","pages/protected/Team.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import React from 'react';\nimport Lottie from 'lottie-react';\nimport LoadingAnimation from '../../assets/lottie/loading.json'; // Lottieアニメーションファイルのパス\n\nconst LoadingModal = () => {\n  return (\n    <div className=\"fixed inset-0 bg-white flex justify-center items-center\">\n      <div className=\"bg-transparent p-5 rounded-lg flex items-center justify-center\">\n        <Lottie animationData={LoadingAnimation}  />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingModal;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport useStrapi from \"../../../hooks/useStrapi\";\nimport useGoogleProfile from \"../../../hooks/useGoogleProfile\";\nimport LoadingModal from \"../../user/LoadingModal\";\n\nfunction Team() {\n  // ログインユーザーの情報の取得と設定\n  const accessToken = localStorage.getItem(\"access_token\");\n  const googleId = useGoogleProfile(accessToken);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userDepartmentName, setUserDepartmentName] = useState(\"\");\n  const [userSectionName, setUserSectionName] = useState(\"\");\n  const [userGroupName, setUserGroupName] = useState(\"\");\n  const [userDivisionName, setUserDivisionName] = useState(\"\");\n\n  //全社員の情報の取得と設定\n  const { data: membersData, loading: membersLoading } = useStrapi(\"user-saltos\", {});\n  const [members, setMembers] = useState([]);\n  const { data: postData, loading: postLoading } = useStrapi(\"posts\", {});\n  const { data: departmentData, loading: departmentLoading } = useStrapi(\"departments\",{});\n  const { data: sectionData, loading: sectionLoading } = useStrapi(\"sections\",{});\n  const { data: groupData, loading: groupLoading } = useStrapi(\"groups\", {});\n  const { data: divisionData, loading: divisionLoading } = useStrapi(\"divisions\",{});\n\n  // ローディングモーダルの表示制御\n  const [showModal, setShowModal] = useState(false);\n\n  // ローディング状態を統合\n  const isLoading = membersLoading || postLoading || departmentLoading || sectionLoading || groupLoading || divisionLoading;\n\n  // 技術本部、SI営業本部、管理本部の各部署IDを配列で定義\n  const technicalDivisionDepartmentIds = useMemo(() => [1, 2, 3, 5, 7, 8], []);\n  const siSalesDivisionDepartmentIds = useMemo(() => [9, 10], []);\n  const managementDivisionDepartmentIds = useMemo(() => [12, 13, 14, 15, 16, 17],[]);\n\n  useEffect(() => {\n    if (isLoading) {\n      //trueの場合、ローディングモーダルを表示\n      setShowModal(true);\n      //falseの場合、ローディングモーダルを非表示\n      setShowModal(false);\n    }\n\n    // ログインユーザーの情報の設定\n    const user = membersData?.data?.find((user) => user.attributes.google_id === googleId);\n    if (user) {\n      setCurrentUser(user.attributes);\n    }\n    // ログインユーザーの部署名、課名、グループ名の設定\n    if (\n      currentUser &&\n      departmentData?.data &&\n      sectionData?.data &&\n      groupData?.data\n    ) {\n      const department = departmentData.data.find(\n        (dept) => dept.id === currentUser.dep_id\n      );\n      setUserDepartmentName(\n        department ? department.attributes.dep_name : \"所属なし\"\n      );\n\n      const section = sectionData.data.find(\n        (sect) => sect.id === currentUser.section_id\n      );\n      setUserSectionName(section ? section.attributes.section_name : \"\");\n\n      const group = groupData.data.find(\n        (grp) => grp.id === currentUser.group_id\n      );\n      setUserGroupName(group ? group.attributes.group_name : \"\");\n    }\n\n    // メンバーのフィルタリングと拡張\n    let filteredMembers = [];\n    if (currentUser && membersData?.data) {\n      // ユーザーが本部に所属している場合の処理\n      if ([1, 2, 3].includes(currentUser.pos_id)) {\n        let divisionId = currentUser.div_id === 0 ? 1 : currentUser.div_id;\n        const currentDivision = divisionData.data.find(\n          (div) => div.id === divisionId\n        );\n        setUserDivisionName(currentDivision.attributes.div_name);\n\n        let relatedDepartmentIds = [];\n        // 本部に基づいて関連する部署のIDリストを作成\n        switch (currentDivision.id) {\n          case 1:\n            relatedDepartmentIds = departmentData.data.map((dept) => dept.id);\n            break;\n          case 2:\n            relatedDepartmentIds = technicalDivisionDepartmentIds;\n            break;\n          case 3:\n            relatedDepartmentIds = siSalesDivisionDepartmentIds;\n            break;\n          case 4:\n            relatedDepartmentIds = managementDivisionDepartmentIds;\n            break;\n          // その他のケース\n          default:\n            break;\n        }\n        filteredMembers = membersData.data.filter((member) =>\n          relatedDepartmentIds.includes(member.attributes.dep_id)\n        );\n      } else {\n        // ログインユーザーがセクションまたはグループを持つ場合の処理\n        filteredMembers = membersData.data.filter(\n          (member) =>\n            member.attributes.dep_id === currentUser.dep_id &&\n            (!currentUser.section_id ||\n              member.attributes.section_id === currentUser.section_id) &&\n            (!currentUser.group_id ||\n              member.attributes.group_id === currentUser.group_id)\n        );\n      }\n    }\n\n    filteredMembers.sort((a, b) => a.attributes.pos_id - b.attributes.pos_id);\n\n    setMembers(\n      filteredMembers.map((member) => ({\n        // メンバーの情報をマッピング\n        id: member.id,\n        picture: member.attributes.picture,\n        first_name: member.attributes.first_name,\n        last_name: member.attributes.last_name,\n        email: member.attributes.email,\n        post:\n          postData.data.find((p) => p.id === member.attributes.pos_id)\n            ?.attributes?.pos_name || \"\",\n        pos_id: member.attributes.pos_id,\n        join_date: member.attributes.join_date\n          ? member.attributes.join_date.startDate\n          : \"-\",\n        department:\n          departmentData.data.find((d) => d.id === member.attributes.dep_id)\n            ?.attributes?.dep_name || \"\",\n        section:\n          sectionData.data.find((s) => s.id === member.attributes.section_id)\n            ?.attributes?.section_name || \"\",\n        group:\n          groupData.data.find((g) => g.id === member.attributes.group_id)\n            ?.attributes?.group_name || \"\",\n      }))\n    );\n  }, [\n    isLoading,\n    currentUser,\n    membersData,\n    postData,\n    departmentData,\n    sectionData,\n    groupData,\n    divisionData,\n    googleId,\n    managementDivisionDepartmentIds,\n    siSalesDivisionDepartmentIds,\n    technicalDivisionDepartmentIds,\n  ]);\n\n  //ログインユーザーの所属部署の役職者の表示と役職項目の表示制御\n  const renderDepartmentPositions = () => {\n    const depId = currentUser?.dep_id;\n    const sectionId = currentUser?.section_id;\n    const posId = currentUser?.pos_id;\n\n    // ログインユーザーの所属部署と課の役職者を検索\n    const bucho = membersData?.data.find(\n      (member) =>\n        member.attributes.dep_id === depId &&\n        (member.attributes.section_id === 0 ||\n          member.attributes.section_id === sectionId) &&\n        member.attributes.pos_id === 4\n    );\n    const kacho = membersData?.data.find(\n      (member) =>\n        member.attributes.dep_id === depId &&\n        member.attributes.section_id === sectionId &&\n        member.attributes.pos_id === 5\n    );\n    const kakaricho = membersData?.data.find(\n      (member) =>\n        member.attributes.dep_id === depId &&\n        member.attributes.section_id === sectionId &&\n        member.attributes.pos_id === 6\n    );\n\n    return (\n      <div className=\"flex items-center space-x-4 mb-1\">\n        {/*部長項目を部長以上で非表示*/}\n        {posId !== 1 && posId !== 2 && posId !== 3 && posId !== 4 && (\n          <div className=\"flex space-x-4 items-center\">\n            <label className=\"badge badge-outline\">部長</label>\n            <p className=\"font-semibold\">\n              {bucho\n                ? `${bucho.attributes.first_name} ${bucho.attributes.last_name}`\n                : \"-\"}\n            </p>\n          </div>\n        )}\n        {/*課長項目を課長以上で非表示*/}\n        {posId !== 1 &&\n          posId !== 2 &&\n          posId !== 3 &&\n          posId !== 4 &&\n          posId !== 5 && (\n            <div className=\"flex space-x-4 items-center\">\n              <label className=\"badge badge-outline\">課長</label>\n              <p className=\"font-semibold \">\n                {kacho\n                  ? `${kacho.attributes.first_name} ${kacho.attributes.last_name}`\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n        {/*係長項目を係長以上で非表示*/}\n        {posId !== 1 &&\n          posId !== 2 &&\n          posId !== 3 &&\n          posId !== 4 &&\n          posId !== 5 &&\n          posId !== 6 && (\n            <div className=\"flex space-x-4 items-center\">\n              <label className=\"badge badge-outline\">係長</label>\n              <p className=\"font-semibold \">\n                {kakaricho\n                  ? `${kakaricho.attributes.first_name} ${kakaricho.attributes.last_name}`\n                  : \"-\"}\n              </p>\n            </div>\n          )}\n      </div>\n    );\n  };\n\n  if (showModal) {\n    return <LoadingModal />;\n  }\n\n  return (\n    <>\n      <TitleCard title=\"所属部署\" topMargin=\"mt-2\">\n        <div>\n          {/* pos_idが1, 2, 3の場合、本部名を表示 */}\n          {[1, 2, 3].includes(currentUser?.pos_id) ? (\n            <div className=\"flex space-x-4 items-center\">\n              <label className=\"badge badge-outline mb-3 font-semibold\">\n                {userDivisionName}\n              </label>\n              <p className=\"mb-3\">\n                {currentUser?.first_name} {currentUser?.last_name}\n              </p>\n            </div>\n          ) : (\n            <p className=\"mb-3 font-semibold \">\n              {userDepartmentName} {userSectionName} {userGroupName}\n            </p>\n          )}\n        </div>\n        {renderDepartmentPositions()}\n\n        {/*所属部署テーブル*/}\n        <div className=\"overflow-auto w-full\">\n          <table className=\"table w-full\">\n            <thead>\n              <tr>\n                <th className=\" text-center\">Name</th>\n                <th className=\"text-center\">Mail</th>\n                <th className=\"text-center\">Post</th>\n                <th className=\"text-center\">Department</th>\n                <th className=\"text-center\">Join Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {members.map((member, index) => (\n                <tr\n                  key={index}\n                  className=\"bg-white shadow-lg rounded-lg overflow-hidden mb-4\"\n                >\n                  <td className=\"p-4\">\n                    <div className=\"flex items-center space-x-3 \">\n                      <div className=\"avatar\">\n                        <div className=\"mask mask-squircle w-12 h-12\">\n                          <img src={member.picture} alt=\"Avatar\" />\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-bold\">{member.first_name}</div>\n                        <div className=\" text-gray-500\">{member.last_name}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"flex flex-wrap gap-1 justify-center items-center\">\n                      <span className=\"\">{member.email}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"flex flex-wrap gap-1  justify-center items-center\">\n                      <span className=\"badge badge-outline\">{member.post}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"flex flex-wrap gap-1  justify-center items-center\">\n                      <span>\n                        {member.department} {member.section} {member.group}\n                      </span>\n                    </div>\n                  </td>\n\n                  <td>\n                    <div className=\"flex flex-wrap gap-1  justify-center items-center\">\n                      <span className=\"\">{member.join_date}</span>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </TitleCard>\n    </>\n  );\n}\n\nexport default Team;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Team from '../../features/settings/team'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Team Members\"}))\n      }, [])\n\n\n    return(\n        <Team/>\n    )\n}\n\nexport default InternalPage"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","LoadingModal","Lottie","animationData","LoadingAnimation","accessToken","localStorage","getItem","googleId","useGoogleProfile","currentUser","setCurrentUser","useState","userDepartmentName","setUserDepartmentName","userSectionName","setUserSectionName","userGroupName","setUserGroupName","userDivisionName","setUserDivisionName","data","membersData","loading","membersLoading","useStrapi","members","setMembers","postData","postLoading","departmentData","departmentLoading","sectionData","sectionLoading","groupData","groupLoading","divisionData","divisionLoading","showModal","setShowModal","isLoading","technicalDivisionDepartmentIds","useMemo","siSalesDivisionDepartmentIds","managementDivisionDepartmentIds","useEffect","_membersData$data","user","find","attributes","google_id","department","dept","id","dep_id","dep_name","section","sect","section_id","section_name","group","grp","group_id","group_name","filteredMembers","includes","pos_id","divisionId","div_id","currentDivision","div","div_name","relatedDepartmentIds","map","filter","member","sort","a","b","_postData$data$find","_postData$data$find$a","_departmentData$data$","_departmentData$data$2","_sectionData$data$fin","_sectionData$data$fin2","_groupData$data$find","_groupData$data$find$","picture","first_name","last_name","email","post","p","pos_name","join_date","startDate","d","s","g","_Fragment","TitleCard","renderDepartmentPositions","depId","sectionId","posId","bucho","kacho","kakaricho","index","src","alt","dispatch","useDispatch","setPageTitle","Team"],"sourceRoot":""}