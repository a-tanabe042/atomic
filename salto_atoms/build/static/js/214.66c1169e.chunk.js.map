{"version":3,"file":"static/js/214.66c1169e.chunk.js","mappings":"6LA6BE,QA1BA,SAAkBA,GAA+C,IAA9C,MAACC,EAAK,SAAEC,EAAQ,UAAEC,EAAS,eAAEC,GAAeJ,EAC3D,OACIK,EAAAA,EAAAA,MAAA,OAAKC,UAAW,0CAA4CH,GAAa,QAAQD,SAAA,EAG7EG,EAAAA,EAAAA,MAACE,EAAAA,EAAQ,CAACC,WAAYJ,EAAiB,eAAiB,GAAGF,SAAA,CACxDD,EAIGG,IAAkBK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAA0BJ,SAAEE,QAInEK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAGfG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iCAAgCJ,SAC1CA,MAKjB,C,+CCpBF,QANC,SAAiBF,GAAyB,IAAxB,WAACQ,EAAU,SAAEN,GAASF,EACrC,OACIS,EAAAA,EAAAA,KAAA,OAAKH,UAAS,yBAAAI,OAA2BF,GAAaN,SAAEA,GAEhE,C,mEC6BA,QA7BA,SAAmBF,GAA8B,IAA7B,YAAEW,EAAW,KAAEC,EAAO,IAAIZ,EAC5C,MAAOa,EAAWC,IAAgBC,EAAAA,EAAAA,IAAeC,EAAAA,IASjD,OAAKC,MAAMC,QAAQN,IAAyB,IAAhBA,EAAKO,QAK/BV,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BJ,SACzCU,EAAKQ,KAAKC,IACTZ,EAAAA,EAAAA,KAAA,UAEEH,UAAS,cAAAI,OAAgBG,IAAcQ,EAAU,6BAA+B,IAChFC,QAASA,IAjBQD,KACvBP,EAAaO,GACTV,GACFA,EAAYU,EACd,EAaqBE,CAAgBF,GAASnB,SAEvCmB,GAJIA,OAPJ,IAgBX,C,gDCPA,MACA,EADmBG,EAAAA,YAvBnB,SAAoBxB,EAIjByB,GAAQ,IAJU,MACnBxB,EAAK,QACLyB,KACGC,GACJ3B,EACC,OAAoBwB,EAAAA,cAAoB,MAAOI,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKV,EACL,kBAAmBC,GAClBC,GAAQ1B,EAAqBuB,EAAAA,cAAoB,QAAS,CAC3DY,GAAIV,GACHzB,GAAS,KAAmBuB,EAAAA,cAAoB,OAAQ,CACzDa,cAAe,QACfC,eAAgB,QAChBC,EAAG,0EAEP,ICCA,MACA,EADmBf,EAAAA,YAvBnB,SAAuBxB,EAIpByB,GAAQ,IAJa,MACtBxB,EAAK,QACLyB,KACGC,GACJ3B,EACC,OAAoBwB,EAAAA,cAAoB,MAAOI,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKV,EACL,kBAAmBC,GAClBC,GAAQ1B,EAAqBuB,EAAAA,cAAoB,QAAS,CAC3DY,GAAIV,GACHzB,GAAS,KAAmBuB,EAAAA,cAAoB,OAAQ,CACzDa,cAAe,QACfC,eAAgB,QAChBC,EAAG,sDAEP,I,aCpBA,MAsKA,EAtK2BvC,IAA0B,IAAzB,OAAEwC,EAAM,QAAEC,GAASzC,EAC7C,MAAO0C,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,KAChCS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,IA8B3C,OAAKJ,GAGH/B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mBAAkBJ,UAC/BG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWJ,SAAA,EACxBO,EAAAA,EAAAA,KAAC8C,EAAW,CACVjD,UAAU,gDACVgB,QAASmB,KAEXpC,EAAAA,EAAAA,MAAA,QAAMmD,SArCUC,IACpBA,EAAEC,iBAEFC,QAAQC,IAAI,CACVlB,cACAG,QACAE,cACAE,QACAE,UACAE,cAEFZ,GAAS,EA0BwBvC,SAAA,EAC3BG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcJ,SAAA,EAC3BO,EAAAA,EAAAA,KAAA,SAAOH,UAAU,QAAOJ,UACtBO,EAAAA,EAAAA,KAAA,QAAMH,UAAU,6CAA4CJ,SAAC,kDAI/DO,EAAAA,EAAAA,KAAA,SACEoD,KAAK,OACLC,YAAY,+DACZxD,UAAU,uBACVyD,MAAOrB,EACPsB,SAAWP,GAAMd,EAAec,EAAEQ,OAAOF,aAG7C1D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcJ,SAAA,EAC3BO,EAAAA,EAAAA,KAAA,SAAOH,UAAU,QAAOJ,UACtBO,EAAAA,EAAAA,KAAA,QAAMH,UAAU,6CAA4CJ,SAAC,sCAI/DG,EAAAA,EAAAA,MAAA,UACEC,UAAU,yBACVyD,MAAOlB,EACPmB,SAAWP,GAAMX,EAASW,EAAEQ,OAAOF,OAAO7D,SAAA,EAE1CO,EAAAA,EAAAA,KAAA,UAAQyD,UAAQ,EAACC,UAAQ,EAAAjE,SAAC,sDAG1BO,EAAAA,EAAAA,KAAA,UAAQsD,MAAM,2BAAM7D,SAAC,8BACrBO,EAAAA,EAAAA,KAAA,UAAQsD,MAAM,2BAAM7D,SAAC,8BACrBO,EAAAA,EAAAA,KAAA,UAAQsD,MAAM,2BAAM7D,SAAC,oCAGzBG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcJ,SAAA,EAC3BO,EAAAA,EAAAA,KAAA,SAAOH,UAAU,QAAOJ,UACtBO,EAAAA,EAAAA,KAAA,QAAMH,UAAU,6CAA4CJ,SAAC,oBAI/DO,EAAAA,EAAAA,KAAA,YACEH,UAAU,kCACVwD,YAAY,yDACZC,MAAOhB,EACPiB,SAAWP,GAAMT,EAAeS,EAAEQ,OAAOF,aAG7C1D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcJ,SAAA,EAC3BG,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOJ,SAAA,EACtBO,EAAAA,EAAAA,KAAA,QAAMH,UAAU,6CAA4CJ,SAAC,kBAG7DO,EAAAA,EAAAA,KAAA,SAAOH,UAAU,2BAA0BJ,SAAC,qBAG9CO,EAAAA,EAAAA,KAAA,KAAGH,UAAU,6BAA4BJ,SAAC,sIAIzC+C,EAAM7B,KAAI,CAACgD,EAAMC,KAChB5D,EAAAA,EAAAA,KAAA,SAEEoD,KAAK,OACLvD,UAAU,SACV0D,SAAWP,GA/ENa,EAACD,EAAON,KACzB,IAAIQ,EAAW,IAAItB,GACnBsB,EAASF,GAASN,EAClBb,EAASqB,EAAS,EA4EWD,CAAWD,EAAOZ,EAAEQ,OAAOhB,MAAM,KAH7CoB,KAMRpB,EAAM9B,OAAS,IACdV,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACnBO,EAAAA,EAAAA,KAAC+D,EAAc,CACblE,UAAU,sCACVgB,QA7FMmD,KAChBxB,EAAM9B,OAAS,GACjB+B,EAAS,IAAID,EAAO,IACtB,UAgGM5C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBJ,SAAA,EAChCG,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOJ,SAAA,EACtBO,EAAAA,EAAAA,KAAA,QAAMH,UAAU,6CAA4CJ,SAAC,SAG7DO,EAAAA,EAAAA,KAAA,SAAOH,UAAU,2BAA0BJ,SAAC,qBAE9CO,EAAAA,EAAAA,KAAA,SACEoD,KAAK,OACLC,YAAY,WACZxD,UAAU,uBACVyD,MAAOZ,EACPa,SAAWP,GAAML,EAAWK,EAAEQ,OAAOF,aAIzC1D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcJ,SAAA,EAC3BG,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOJ,SAAA,EACtBO,EAAAA,EAAAA,KAAA,QAAMH,UAAU,6CAA4CJ,SAAC,YAG7DO,EAAAA,EAAAA,KAAA,SAAOH,UAAU,2BAA0BJ,SAAC,qBAG9CO,EAAAA,EAAAA,KAAA,SACEoD,KAAK,OACLC,YAAY,aACZxD,UAAU,uBACVyD,MAAOV,EACPW,SAAWP,GAAMH,EAAaG,EAAEQ,OAAOF,aAI3CtD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcJ,UAC3BO,EAAAA,EAAAA,KAAA,UAAQoD,KAAK,SAASvD,UAAU,kBAAiBJ,SAAC,2BAxHxC,IA8HZ,C,gDC7IV,MACA,EADmBsB,EAAAA,YAvBnB,SAAyBxB,EAItByB,GAAQ,IAJe,MACxBxB,EAAK,QACLyB,KACGC,GACJ3B,EACC,OAAoBwB,EAAAA,cAAoB,MAAOI,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKV,EACL,kBAAmBC,GAClBC,GAAQ1B,EAAqBuB,EAAAA,cAAoB,QAAS,CAC3DY,GAAIV,GACHzB,GAAS,KAAmBuB,EAAAA,cAAoB,OAAQ,CACzDa,cAAe,QACfC,eAAgB,QAChBC,EAAG,+RAEP,ICCA,MACA,EADmBf,EAAAA,YAvBnB,SAAiBxB,EAIdyB,GAAQ,IAJO,MAChBxB,EAAK,QACLyB,KACGC,GACJ3B,EACC,OAAoBwB,EAAAA,cAAoB,MAAOI,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKV,EACL,kBAAmBC,GAClBC,GAAQ1B,EAAqBuB,EAAAA,cAAoB,QAAS,CAC3DY,GAAIV,GACHzB,GAAS,KAAmBuB,EAAAA,cAAoB,OAAQ,CACzDa,cAAe,QACfC,eAAgB,QAChBC,EAAG,8KAEP,I,aCjBA,MA6EA,EA7EuBmC,KACnB,MAAMC,EAAiB,CACnB1E,MAAO,+DACP4C,MAAO,2BACPE,YAAa,+MACb6B,OAAQ,2BACRC,QAAS,CAAC,2BAAQ,2BAAQ,4BAC1B5B,MAAO,CACH,CAAEY,KAAM,MAAOiB,KAAM,qCAAaC,IAAK,iCACvC,CAAElB,KAAM,QAASiB,KAAM,sCAAcC,IAAK,kCAC1C,CAAElB,KAAM,QAASiB,KAAM,mEAAkBC,IAAK,kCAElDC,MAAO,CACH,CAAEnB,KAAM,MAAOkB,IAAK,uBACpB,CAAElB,KAAM,MAAOkB,IAAK,wCAItBE,EAAepB,IACjB,OAAOA,GACH,IAAK,MACL,IAAK,QACL,IAAK,QAAS,OAAOpD,EAAAA,EAAAA,KAACyE,EAAgB,CAAC5E,UAAU,yBACjD,QAAS,OAAO,KACpB,EAGJ,OACIG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6BAA4BJ,UACvCG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWJ,SAAA,EACtBO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,aAAYJ,SAAEyE,EAAe1E,SAC3CQ,EAAAA,EAAAA,KAAA,QAAMH,UAAS,eAAAI,OAA0C,6BAAzBiE,EAAe9B,MAAmB,UAAY,QAAS3C,SAAEyE,EAAe9B,SACxGpC,EAAAA,EAAAA,KAAA,KAAAP,SAAIyE,EAAe5B,eACnBtC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,aACfG,EAAAA,EAAAA,KAAA,MAAAP,SAAI,wBACJO,EAAAA,EAAAA,KAAA,MAAAP,UACIO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6BAA4BJ,SAAEyE,EAAeC,YAE/DnE,EAAAA,EAAAA,KAAA,MAAAP,SAAI,gDACJO,EAAAA,EAAAA,KAAA,MAAAP,SACKyE,EAAeE,QAAQzD,KAAI,CAAC+D,EAAQd,KACjC5D,EAAAA,EAAAA,KAAA,MAAgBH,UAAU,6BAA4BJ,SAAEiF,GAA/Cd,QAGjB5D,EAAAA,EAAAA,KAAA,OAAKH,UAAU,aACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCJ,SAAA,EAC3CG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACIO,EAAAA,EAAAA,KAAA,MAAAP,SAAI,kBACJO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBJ,SAC9ByE,EAAe1B,MAAM7B,KAAI,CAACgD,EAAMC,KAC7BhE,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,yBAAwBJ,SAAA,CAC7C+E,EAAYb,EAAKP,OAClBpD,EAAAA,EAAAA,KAAA,KAAG2E,KAAMhB,EAAKW,IAAKd,OAAO,SAASoB,IAAI,sBAAsB/E,UAAU,OAAMJ,SACxEkE,EAAKU,SAHLT,WASrBhE,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACIO,EAAAA,EAAAA,KAAA,MAAAP,SAAI,wBACJO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,iBAAgBJ,SACzByE,EAAeK,MAAM5D,KAAI,CAACkE,EAAMjB,KAC7B5D,EAAAA,EAAAA,KAAA,MAAgBH,UAAU,yBAAwBJ,UAC9CO,EAAAA,EAAAA,KAAA,KAAG2E,KAAME,EAAKP,IAAKd,OAAO,SAASoB,IAAI,sBAAsB/E,UAAU,oBAAmBJ,SACvE,QAAdoF,EAAKzB,MAAiBpD,EAAAA,EAAAA,KAAC8E,EAAQ,CAACjF,UAAU,kBAAoBG,EAAAA,EAAAA,KAAA,OAAK+E,I,q2QAAiBC,IAAI,SAASnF,UAAU,0CAF3G+D,iBAU3B,C,oJC5EP,MAAMqB,GAAcC,EAAAA,EAAAA,IAAW,CACpCC,IAAK,cACLC,QAAS,OAEEC,GAAcC,EAAAA,EAAAA,IAAK,CAC9BH,IAAK,cACLC,QAAS,KAGEG,GAAaD,EAAAA,EAAAA,IAAK,CAC7BH,IAAK,aACLC,QAAS,KAGEI,GAA0BF,EAAAA,EAAAA,IAAK,CAC1CH,IAAK,0BACLC,QAAS,KAGEK,GAAuBH,EAAAA,EAAAA,IAAK,CACvCH,IAAK,uBACLC,QAAS,KAGEM,GAAqBJ,EAAAA,EAAAA,IAAK,CACrCH,IAAK,qBACLC,QAAS,KAGEO,GAAoBL,EAAAA,EAAAA,IAAK,CACpCH,IAAK,oBACLC,QAAS,IAGEQ,GAAwBN,EAAAA,EAAAA,IAAK,CACxCH,IAAK,wBACLC,QAAS,IAGES,GAAsBP,EAAAA,EAAAA,IAAK,CACtCH,IAAK,sBACLC,SAAS,IAGEU,GAAgBR,EAAAA,EAAAA,IAAK,CAChCH,IAAK,gBACLC,QAAS,OAGE7E,GAAW+E,EAAAA,EAAAA,IAAK,CAC3BH,IAAK,WACLC,QAAS,eAGEW,GAAuBT,EAAAA,EAAAA,IAAK,CACvCH,IAAK,uBACLC,QAAS,M","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","components/tab/TabsLayout.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/PlusCircleIcon.js","features/projects/components/CreateProjectModal.js","../node_modules/@heroicons/react/24/outline/esm/DocumentTextIcon.js","../node_modules/@heroicons/react/24/outline/esm/LinkIcon.js","features/projects/components/ProjectContext.js","state.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","// TabsLayout.js\nimport { useRecoilState } from 'recoil';\nimport { tabState } from '../../state';\n\nfunction TabsLayout({ onTabChange, tabs = [] }) { // デフォルト値を設定\n  const [activeTab, setActiveTab] = useRecoilState(tabState);\n\n  const handleTabChange = (tabName) => {\n    setActiveTab(tabName);\n    if (onTabChange) {\n      onTabChange(tabName);\n    }\n  };\n\n  if (!Array.isArray(tabs) || tabs.length === 0) {\n    return null; // tabsが空の配列の場合、何も表示しない\n  }\n\n  return (\n    <div className=\"tabs tabs-boxed bg-base-100\">\n      {tabs.map((tabName) => (\n        <button\n          key={tabName}\n          className={`tab tab-lg ${activeTab === tabName ? \"btn btn-success text-white\" : \"\"}`}\n          onClick={() => handleTabChange(tabName)}\n        >\n          {tabName}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default TabsLayout;\n","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PlusCircleIcon);\nexport default ForwardRef;","import React, { useState } from \"react\";\nimport { PlusCircleIcon, XCircleIcon } from \"@heroicons/react/24/outline\";\n\nconst CreateProjectModal = ({ isOpen, onClose }) => {\n  const [projectName, setProjectName] = useState(\"\");\n  const [badge, setBadge] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [linkUrl, setLinkUrl] = useState(\"\");\n  const [githubUrl, setGithubUrl] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // データベースに保存するロジックを実装\n    console.log({\n      projectName,\n      badge,\n      description,\n      files,\n      linkUrl,\n      githubUrl,\n    });\n    onClose(); // フォーム送信後にモーダルを閉じる\n  };\n\n  // ファイル追加処理\n  const handleAddFile = () => {\n    if (files.length < 3) {\n      setFiles([...files, \"\"]); // 新しいアップロードボタンを追加\n    }\n  };\n\n  // ファイル更新処理\n  const updateFile = (index, value) => {\n    let newFiles = [...files];\n    newFiles[index] = value;\n    setFiles(newFiles);\n  };\n\n  if (!isOpen) return null; // モーダルが開かれていない場合は何も表示しない\n\n  return (\n    <div className=\"modal modal-open\">\n      <div className=\"modal-box\">\n        <XCircleIcon\n          className=\"h-6 w-6 absolute right-2 top-2 cursor-pointer\"\n          onClick={onClose}\n        />\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text font-bold text-lg text-gray-700\">\n                プロジェクト名\n              </span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"プロジェクト名を入力\"\n              className=\"input input-bordered\"\n              value={projectName}\n              onChange={(e) => setProjectName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text font-bold text-lg text-gray-700\">\n                カテゴリー\n              </span>\n            </label>\n            <select\n              className=\"select select-bordered\"\n              value={badge}\n              onChange={(e) => setBadge(e.target.value)}\n            >\n              <option disabled selected>\n                選択してください\n              </option>\n              <option value=\"個人開発\">個人開発</option>\n              <option value=\"社内開発\">社内開発</option>\n              <option value=\"社内研修\">社内研修</option>\n            </select>\n          </div>\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text font-bold text-lg text-gray-700\">\n                説明\n              </span>\n            </label>\n            <textarea\n              className=\"textarea textarea-bordered h-32\"\n              placeholder=\"プロジェクトの説明\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></textarea>\n          </div>\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text font-bold text-lg text-gray-700\">\n                証跡\n              </span>\n              <badge className=\"badge badge-outline ml-2\">任意</badge>\n\n            </label>\n            <p className=\"text-xs text-gray-500 ml-1\">\n              要件定義書.pdf,画面定義書.pdf,テーブル定義書.xlsxなど\n            </p>\n\n            {files.map((file, index) => (\n              <input\n                key={index}\n                type=\"file\"\n                className=\"input \"\n                onChange={(e) => updateFile(index, e.target.files[0])}\n              />\n            ))}\n            {files.length < 3 && (\n              <div className=\"mt-2\">\n                <PlusCircleIcon\n                  className=\"h-6 w-6 text-primary cursor-pointer\"\n                  onClick={handleAddFile}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-control mt-4\">\n            <label className=\"label\">\n              <span className=\"label-text font-bold text-lg text-gray-700\">\n                URL\n              </span>\n              <badge className=\"badge badge-outline ml-2\">任意</badge>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Link URL\"\n              className=\"input input-bordered\"\n              value={linkUrl}\n              onChange={(e) => setLinkUrl(e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text font-bold text-lg text-gray-700\">\n                GitHub\n              </span>\n              <badge className=\"badge badge-outline ml-2\">任意</badge>\n\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"GitHub URL\"\n              className=\"input input-bordered\"\n              value={githubUrl}\n              onChange={(e) => setGithubUrl(e.target.value)}\n            />\n          </div>\n\n          <div className=\"modal-action\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              保存\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProjectModal;\n","import * as React from \"react\";\nfunction DocumentTextIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(DocumentTextIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction LinkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244\"\n  }));\n}\nconst ForwardRef = React.forwardRef(LinkIcon);\nexport default ForwardRef;","import React from 'react';\nimport { DocumentTextIcon, LinkIcon } from '@heroicons/react/24/outline';\nimport githubMark from '../../../assets/img/github-mark.png'; // 正しいパスに変更してください\n\n\n\nconst ProjectContext = () => {\n    const projectDetails = {\n        title: \"社内研修アプリの作成\",\n        badge: \"個人開発\",\n        description: \"このプロジェクトでは、社内研修のためのアプリケーションを開発します。\",\n        master: \"田邉太郎\",\n        members: [\"山田太郎\", \"佐藤花子\", \"鈴木一郎\"],\n        files: [\n            { type: \"pdf\", name: \"要件定義書.pdf\", url: \"https://example.com/file1.pdf\" },\n            { type: \"excel\", name: \"画面定義書.xlsx\", url: \"https://example.com/file2.xlsx\" },\n            { type: \"image\", name: \"プロジェクトイメージ.jpg\", url: \"https://example.com/image.jpg\" }\n        ],\n        links: [\n            { type: \"url\", url: \"https://example.com\" },\n            { type: \"git\", url: \"https://github.com/example/project\" }\n        ]\n    };\n\n    const getFileIcon = (type) => {\n        switch(type) {\n            case 'pdf': return <DocumentTextIcon className=\"h-5 w-5 inline-block\" />;\n            case 'excel': return <DocumentTextIcon className=\"h-5 w-5 inline-block\" />;\n            case 'image': return <DocumentTextIcon className=\"h-5 w-5 inline-block\" />;\n            default: return null;\n        }\n    };\n\n    return (\n        <div className=\"card bg-base-100 shadow-xl\">\n            <div className=\"card-body\">\n                <h2 className=\"card-title\">{projectDetails.title}</h2>\n                <span className={`badge badge-${projectDetails.badge === \"個人開発\" ? \"success\" : \"info\"}`}>{projectDetails.badge}</span>\n                <p>{projectDetails.description}</p>\n                <div className=\"divider\"></div>\n                <h3>管理者</h3>\n                <ul>\n                    <li className=\"badge badge-secondary mr-1\">{projectDetails.master}</li>\n                </ul>\n                <h3>チームメンバー</h3>\n                <ul>\n                    {projectDetails.members.map((member, index) => (\n                        <li key={index} className=\"badge badge-secondary mr-1\">{member}</li>\n                    ))}\n                </ul>\n                <div className=\"divider\"></div>\n                <div className=\"flex flex-wrap justify-between\">\n                    <div>\n                        <h3>証跡</h3>\n                        <ul className=\"list-disc pl-5 mt-2\">\n                            {projectDetails.files.map((file, index) => (\n                                <li key={index} className=\"flex items-center mb-2\">\n                                    {getFileIcon(file.type)}\n                                    <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"ml-2\">\n                                        {file.name}\n                                    </a>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div>\n                        <h3>リンク</h3>\n                        <ul className=\"list-disc pl-5\">\n                            {projectDetails.links.map((link, index) => (\n                                <li key={index} className=\"flex items-center mb-2\">\n                                    <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"flex items-center\">\n                                        {link.type === \"url\" ? <LinkIcon className=\"h-5 w-5 mt-2\" /> : <img src={githubMark} alt=\"GitHub\" className=\"h-5 w-5 bg-white rounded-full mt-2\" />}\n                                    </a>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectContext;\n","import { atom ,atomFamily } from 'recoil';\n\n// クッキー関連の状態\nexport const cookieState = atomFamily({\n  key: 'cookieState',\n  default: null,\n});\nexport const skillsState = atom({\n  key: 'skillsState', // unique ID (with respect to other atoms/selectors)\n  default: [], // default value (aka initial value)\n});\n\nexport const goalsState = atom({\n  key: 'goalsState',\n  default: [],\n});\n\nexport const selectedDepartmentState = atom({\n  key: 'selectedDepartmentState', // unique key\n  default: '', // default value\n});\n\nexport const selectedSectionState = atom({\n  key: 'selectedSectionState',\n  default: '',\n});\n\nexport const selectedGroupState = atom({\n  key: 'selectedGroupState',\n  default: '',\n});\n\nexport const selectedPostState = atom({\n  key: 'selectedPostState',\n  default: 0,\n});\n\nexport const selectedDivisionState = atom({\n  key: 'selectedDivisionState',\n  default: 0,\n});\n\nexport const isPostSelectedState = atom({\n  key: 'isPostSelectedState',\n  default: false,\n});\n\nexport const joinDateState = atom({\n  key: 'joinDateState', // 一意のID\n  default: null, // 初期値\n});\n\nexport const tabState = atom({\n  key: 'tabState', // ユニークなキー\n  default: 'myProjects', // デフォルト値\n});\n\nexport const selectedProjectState = atom({\n  key: 'selectedProjectState',\n  default: null, // 初期値はnullまたは最初のプロジェクトのID\n});"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","onTabChange","tabs","activeTab","setActiveTab","useRecoilState","tabState","Array","isArray","length","map","tabName","onClick","handleTabChange","React","svgRef","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","isOpen","onClose","projectName","setProjectName","useState","badge","setBadge","description","setDescription","files","setFiles","linkUrl","setLinkUrl","githubUrl","setGithubUrl","XCircleIcon","onSubmit","e","preventDefault","console","log","type","placeholder","value","onChange","target","disabled","selected","file","index","updateFile","newFiles","PlusCircleIcon","handleAddFile","ProjectContext","projectDetails","master","members","name","url","links","getFileIcon","DocumentTextIcon","member","href","rel","link","LinkIcon","src","alt","cookieState","atomFamily","key","default","skillsState","atom","goalsState","selectedDepartmentState","selectedSectionState","selectedGroupState","selectedPostState","selectedDivisionState","isPostSelectedState","joinDateState","selectedProjectState"],"sourceRoot":""}