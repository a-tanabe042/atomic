{"version":3,"file":"static/js/20.b631d71c.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","components/Input/SearchBar.js","components/filter/Filter.js","features/members/index.js","features/user/LoadingModal.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(FunnelIcon);\nexport default ForwardRef;","\n\nimport React, { useEffect } from 'react'\n\nfunction SearchBar({searchText, styleClass, placeholderText, setSearchText}) {\n\n\n\nconst updateSearchInput = (value) => {\n    setSearchText(value)\n}\n\n  return (\n    <div className={\"inline-block \" + styleClass}>\n    <div className=\"input-group  relative flex flex-wrap items-stretch w-full \">\n      <input type=\"search\" value={searchText} placeholder={placeholderText || \"Search\"} onChange={(e) => updateSearchInput(e.target.value)} className=\"input input-sm input-bordered  w-full max-w-xs\" />\n  </div>\n</div>\n  )\n}\n\nexport default SearchBar\n","import React, { useState, useEffect } from \"react\";\nimport FunnelIcon from \"@heroicons/react/24/outline/FunnelIcon\";\nimport SearchBar from \"../Input/SearchBar\";\n\nconst Filter = ({ removeFilter, applyFilter, applySearch, posts, departments }) => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const showFiltersAndApply = (param) => {\n    setSearchText(param); // Set the searchText to the selected filter\n    applyFilter(param);\n  };\n\n  useEffect(() => {\n    const handleSearch = () => {\n      if (searchText === \"\") {\n        removeFilter();\n      } else {\n        applySearch(searchText);\n      }\n    };\n\n    handleSearch();\n    // ここで、依存配列に searchText のみを含めます。\n  }, [searchText]); \n  \n\n  return (\n    <div className=\"inline-block float-right\">\n      <SearchBar\n        searchText={searchText}\n        setSearchText={setSearchText}\n        styleClass=\"mr-4\"\n      />\n      <div className=\"dropdown dropdown-bottom dropdown-end\">\n        <label tabIndex={0} className=\"btn btn-sm btn-outline\">\n          <FunnelIcon className=\"w-5 mr-2\" />\n          Filter\n        </label>\n        <ul\n          tabIndex={0}\n          className=\"dropdown-content menu p-2 text-sm shadow bg-base-100 rounded-box w-52\"\n        >\n          <li className=\"menu-title\"><span>Posts</span></li>\n          {posts.map((post, index) => (\n            <li key={index}><a onClick={() => showFiltersAndApply(post)}>{post}</a></li>\n          ))}\n          <li className=\"menu-title\"><span>Departments</span></li>\n          {departments.map((department, index) => (\n            <li key={index}><a onClick={() => showFiltersAndApply(department)}>{department}</a></li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport TitleCard from \"../../components/Cards/TitleCard\";\nimport useStrapi from \"../../hooks/useStrapi\";\nimport Filter from \"../../components/filter/Filter\";\nimport LoadingModal from \"../user/LoadingModal\";\n\nfunction Members() {\n  const { data: membersData, loading: membersLoading } = useStrapi(\n    \"user-saltos\",\n    {}\n  );\n  const { data: departmentData, loading: departmentLoading } = useStrapi(\n    \"departments\",\n    {}\n  );\n  const { data: sectionData, loading: sectionLoading } = useStrapi(\n    \"sections\",\n    {}\n  );\n  const { data: groupData, loading: groupLoading } = useStrapi(\"groups\", {});\n  const { data: postData, loading: postLoading } = useStrapi(\"posts\", {});\n  const { data: divisionData, loading: divisionLoading } = useStrapi(\n    \"divisions\",\n    {}\n  );\n\n  const isLoading =\n    membersLoading ||\n    postLoading ||\n    departmentLoading ||\n    sectionLoading ||\n    groupLoading ||\n    divisionLoading;\n\n  const [filteredMembers, setFilteredMembers] = useState([]);\n  const [, setFilterParam] = useState(\"\");\n  const postsList =\n    postData?.data.map((post) => post.attributes.pos_name) || [];\n  const departmentsList =\n    departmentData?.data.map((department) => department.attributes.dep_name) ||\n    [];\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const membersPerPage = 10; // Set the number of members per page\n\n  // Calculate the current members to display\n  const indexOfLastMember = currentPage * membersPerPage;\n  const indexOfFirstMember = indexOfLastMember - membersPerPage;\n  const currentMembers = filteredMembers.slice(\n    indexOfFirstMember,\n    indexOfLastMember\n  );\n\n  // Change page and scroll to top\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n\n    const element = document.getElementById(\"top-of-page\");\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  };\n\n  // Calculate total pages\n  const pageNumbers = [];\n  for (\n    let i = 1;\n    i <= Math.ceil(filteredMembers.length / membersPerPage);\n    i++\n  ) {\n    pageNumbers.push(i);\n  }\n\n  // Enhance member data with additional information\n  useEffect(() => {\n    if (isLoading) return; // データがまだロード中の場合は何もしない\n\n    const enhancedMembers = membersData.data.map((member) => ({\n      ...member.attributes,\n      department:\n        departmentData.data.find((d) => d.id === member.attributes.dep_id)\n          ?.attributes?.dep_name || \"\",\n      section:\n        sectionData.data.find((s) => s.id === member.attributes.section_id)\n          ?.attributes?.section_name || \"\",\n      group:\n        groupData.data.find((g) => g.id === member.attributes.group_id)\n          ?.attributes?.group_name || \"\",\n      post:\n        postData.data.find((p) => p.id === member.attributes.pos_id)?.attributes\n          ?.pos_name || \"\",\n      division:\n        divisionData.data.find((d) => d.id === member.attributes.div_id)\n          ?.attributes?.div_name || \"\",\n\n      skills: member.attributes.skills || [],\n      goals: member.attributes.goals || [],\n    }));\n\n    setFilteredMembers(enhancedMembers);\n  }, [\n    membersData,\n    departmentData,\n    sectionData,\n    groupData,\n    postData,\n    divisionData,\n  ]);\n\n  // フィルター適用関数\n  const applyFilter = (filterParam) => {\n    setFilterParam(filterParam); // フィルターパラメータを設定\n\n    if (membersData && membersData.data) {\n      // membersData.data が存在する場合のみフィルタリングを実行\n      let filtered = membersData.data.map(enhanceMemberData);\n      if (filterParam !== \"All\") {\n        filtered = filtered.filter(\n          (member) =>\n            member.post === filterParam || member.department === filterParam\n        );\n      }\n\n      setFilteredMembers(filtered);\n    }\n  };\n\n  const removeFilter = () => {\n    setFilterParam(\"\"); // フィルターパラメータをクリア\n\n    if (membersData && membersData.data) {\n      \n      const originalMembers = membersData.data.map((member) => ({\n        ...member.attributes,\n        department:\n          departmentData.data.find((d) => d.id === member.attributes.dep_id)\n            ?.attributes?.dep_name || \"\",\n        section:\n          sectionData.data.find((s) => s.id === member.attributes.section_id)\n            ?.attributes?.section_name || \"\",\n        group:\n          groupData.data.find((g) => g.id === member.attributes.group_id)\n            ?.attributes?.group_name || \"\",\n        post:\n          postData.data.find((p) => p.id === member.attributes.pos_id)\n            ?.attributes?.pos_name || \"\",\n        division:\n          divisionData.data.find((d) => d.id === member.attributes.div_id)\n            ?.attributes?.div_name || \"\",\n        skills: member.attributes.skills || [],\n        goals: member.attributes.goals || [],\n      }));\n\n      setFilteredMembers(originalMembers);\n    }\n  };\n\n  const applySearch = (searchText) => {\n    const searchWords = searchText\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((word) => word.length > 0);\n\n    if (searchWords.length === 0) {\n      setFilteredMembers(membersData.data.map(enhanceMemberData));\n    } else {\n      const filteredData = membersData.data\n        .map(enhanceMemberData)\n        .filter((member) => {\n          const memberDataString = `\n            ${member.first_name}${member.last_name}\n            ${member.department}${member.section}${member.group}\n            ${member.post}${member.division}${member.skills.join(\n            \"\"\n          )}${member.goals.join(\"\")}`\n            .toLowerCase()\n            .replace(/\\s+/g, \"\");\n\n          return searchWords.every((word) => memberDataString.includes(word));\n        });\n\n      setFilteredMembers(filteredData);\n    }\n  };\n\n  \n  const enhanceMemberData = (member) => ({\n    id: member.id, // メンバーの ID を含める\n    ...member.attributes,\n    department:\n      departmentData.data.find((d) => d.id === member.attributes.dep_id)\n        ?.attributes?.dep_name || \"\",\n    section:\n      sectionData.data.find((s) => s.id === member.attributes.section_id)\n        ?.attributes?.section_name || \"\",\n    group:\n      groupData.data.find((g) => g.id === member.attributes.group_id)\n        ?.attributes?.group_name || \"\",\n    post:\n      postData.data.find((p) => p.id === member.attributes.pos_id)?.attributes\n        ?.pos_name || \"\",\n    division:\n      divisionData.data.find((d) => d.id === member.attributes.div_id)\n        ?.attributes?.div_name || \"\",\n    skills: member.attributes.skills || [],\n    goals: member.attributes.goals || [],\n  });\n\n  if (isLoading) {\n    return <LoadingModal />;\n  }\n\n  return (\n    <>\n      <TitleCard\n        title=\"Members\"\n        topMargin=\"mt-2\"\n        TopSideButtons={\n          <Filter\n            applySearch={applySearch}\n            applyFilter={applyFilter}\n            removeFilter={removeFilter}\n            posts={postsList}\n            departments={departmentsList}\n          />\n        }\n      >\n        <div id=\"top-of-page\" className=\"overflow-auto w-full py-2\">\n          <table className=\"table w-full\">\n            <thead>\n              <tr>\n                <th className=\"text-xs text-center\">Name</th>\n                <th className=\"text-xs text-center\">Post</th>\n                <th className=\"text-xs text-center\">Department</th>\n                <th className=\"text-xs text-center\">スキル</th>\n                <th className=\"text-xs text-center\">目標</th>\n              </tr>\n            </thead>\n            <tbody>\n              {currentMembers.map((member, index) => (\n                <tr\n                  key={index}\n                  className=\"bg-white shadow-lg rounded-lg overflow-hidden mb-4\"\n                >\n                  <td className=\"p-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"avatar\">\n                        <div className=\"mask mask-squircle w-8 h-8\">\n                          <img src={member.picture} alt=\"Avatar\" />\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-bold text-xs\">\n                          {member.first_name}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          {member.last_name}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"flex flex-wrap gap-1 text-xs justify-center items-center\">\n                      <span className=\"badge badge-outline text-xs\">\n                        {member.post}\n                      </span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"text-xs flex justify-center\">\n                      {member.division} {member.department} {member.section}{\" \"}\n                      {member.group}\n                    </div>\n                  </td>\n                  <td className=\"max-w-[300px] overflow-auto\">\n                    {/* Skills */}\n                    <div className=\"flex flex-wrap gap-1 justify-center items-center\">\n                      {member.skills && member.skills.length > 0 ? (\n                        member.skills.slice(0, 3).map((skill, skillIndex) => (\n                          <span\n                            key={skillIndex}\n                            className=\"badge badge-outline text-xs\"\n                          >\n                            {skill}\n                          </span>\n                        ))\n                      ) : (\n                        <span className=\"text-xs items-center\"></span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"max-w-[300px] overflow-auto\">\n                    {/* Goals */}\n                    <div className=\"flex flex-wrap gap-1 justify-left items-center\">\n                      {member.goals && member.goals.length > 0 ? (\n                        member.goals.slice(0, 6).map((goal, goalIndex) => (\n                          <span\n                            key={goalIndex}\n                            className=\"badge badge-outline text-xs\"\n                          >\n                            {goal}\n                          </span>\n                        ))\n                      ) : (\n                        <span className=\"text-xs\"></span>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"flex justify-center my-4\">\n          <div className=\"btn-group mt-8\">\n            {pageNumbers.map((number) => (\n              <button\n                key={number}\n                className={`btn btn-sm ${\n                  currentPage === number ? \"btn-neutral\" : \"btn-outline\"\n                }`}\n                onClick={() => paginate(number)}\n              >\n                {number}\n              </button>\n            ))}\n          </div>\n        </div>\n      </TitleCard>\n    </>\n  );\n}\n\nexport default Members;\n","import React from 'react';\nimport Lottie from 'lottie-react';\nimport LoadingAnimation from '../../assets/lottie/loading.json'; // Lottieアニメーションファイルのパス\n\nconst LoadingModal = () => {\n  return (\n    <div className=\"fixed inset-0 bg-white flex justify-center items-center\">\n      <div className=\"bg-transparent p-5 rounded-lg flex items-center justify-center\">\n        <Lottie animationData={LoadingAnimation}  />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingModal;\n"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","React","svgRef","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","searchText","placeholderText","setSearchText","type","value","placeholder","onChange","e","updateSearchInput","target","removeFilter","applyFilter","applySearch","posts","departments","useState","showFiltersAndApply","param","useEffect","SearchBar","tabIndex","FunnelIcon","map","post","index","onClick","department","data","membersData","loading","membersLoading","useStrapi","departmentData","departmentLoading","sectionData","sectionLoading","groupData","groupLoading","postData","postLoading","divisionData","divisionLoading","isLoading","filteredMembers","setFilteredMembers","setFilterParam","postsList","attributes","pos_name","departmentsList","dep_name","currentPage","setCurrentPage","indexOfLastMember","indexOfFirstMember","currentMembers","slice","pageNumbers","i","Math","ceil","length","push","enhancedMembers","member","_departmentData$data$","_departmentData$data$2","_sectionData$data$fin","_sectionData$data$fin2","_groupData$data$find","_groupData$data$find$","_postData$data$find","_postData$data$find$a","_divisionData$data$fi","_divisionData$data$fi2","find","dep_id","section","s","section_id","section_name","group","g","group_id","group_name","p","pos_id","division","div_id","div_name","skills","goals","enhanceMemberData","_departmentData$data$5","_departmentData$data$6","_sectionData$data$fin5","_sectionData$data$fin6","_groupData$data$find4","_groupData$data$find5","_postData$data$find3","_postData$data$find3$","_divisionData$data$fi5","_divisionData$data$fi6","LoadingModal","_Fragment","TitleCard","Filter","searchWords","toLowerCase","split","filter","word","filteredData","memberDataString","first_name","last_name","join","replace","every","includes","filterParam","filtered","originalMembers","_departmentData$data$3","_departmentData$data$4","_sectionData$data$fin3","_sectionData$data$fin4","_groupData$data$find2","_groupData$data$find3","_postData$data$find2","_postData$data$find2$","_divisionData$data$fi3","_divisionData$data$fi4","src","picture","alt","skill","skillIndex","goal","goalIndex","number","pageNumber","element","document","getElementById","scrollIntoView","behavior","block","paginate","Lottie","animationData","LoadingAnimation"],"sourceRoot":""}